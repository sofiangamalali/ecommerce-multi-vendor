## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - POST
    uri: user/login
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Log in a user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jmante@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: '2<FERI#cgw-@n_z'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: jmante@example.org
      password: '2<FERI#cgw-@n_z'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: user/register
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: 'Must be at least 3  characters.'
        required: true
        example: cbvblvfihhszwkgedlhnjyyvfzxbf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lname:
        name: lname
        description: 'Must be at least 3  characters.'
        required: true
        example: suwrfiwpsspgqluofadakxhecsdimfkuctvd
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: christian.doyle@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: "?s;'HB[,KRpOpp6kF8i"
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone_number:
        name: phone_number
        description: 'Must not be greater than 11  characters. Must be at least 11 characters.'
        required: true
        example: ltcsnilhitythzjc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      birth_date:
        name: birth_date
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: excepturi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      fname: cbvblvfihhszwkgedlhnjyyvfzxbf
      lname: suwrfiwpsspgqluofadakxhecsdimfkuctvd
      email: christian.doyle@example.com
      password: "?s;'HB[,KRpOpp6kF8i"
      phone_number: ltcsnilhitythzjc
      birth_date: sit
      address: excepturi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: user/get-data
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: user/orders
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the orders associated with the authenticated user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'user/order/cancel/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Cancel a specific order for the authenticated user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cancel.'
        required: true
        example: voluptatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: voluptatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
